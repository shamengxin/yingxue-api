<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shamengxin.mapper.UserMapper">

    <resultMap type="com.shamengxin.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="intro" column="intro" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="phoneLinked" column="phone_linked" jdbcType="INTEGER"/>
        <result property="openid" column="openid" jdbcType="VARCHAR"/>
        <result property="wechatLinked" column="wechat_linked" jdbcType="INTEGER"/>
        <result property="followingCount" column="following_count" jdbcType="INTEGER"/>
        <result property="followersCount" column="followers_count" jdbcType="INTEGER"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
        <result property="deletedAt" column="deleted_at" jdbcType="TIMESTAMP"/>
    </resultMap>
    <!--插入-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into user(name,
                         avatar,
                         intro,
                         phone,
                         phone_linked,
                         openid,
                         wechat_linked,
                         following_count,
                         followers_count,
                         created_at,
                         updated_at,
                         deleted_at)
        values (#{name},
                #{avatar},
                #{intro},
                #{phone},
                #{phoneLinked},
                #{openid},
                #{wechatLinked},
                #{followingCount},
                #{followersCount},
                #{createdAt},
                #{updatedAt},
                #{deletedAt})
    </insert>
    <update id="update">
        update user
        set phone=#{phone},
            name=#{name},
            intro = #{intro}
        where id = #{id}
    </update>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               name,
               avatar,
               intro,
               phone,
               phone_linked,
               openid,
               wechat_linked,
               following_count,
               followers_count,
               created_at,
               updated_at,
               deleted_at
        from user
        where id = #{id}
    </select>
    <!--根据手机号查对象-->
    <select id="findPhone" resultMap="UserMap">
        select id,
               name,
               avatar,
               intro,
               phone,
               phone_linked,
               openid,
               wechat_linked,
               following_count,
               followers_count,
               created_at,
               updated_at,
               deleted_at
        from user
        where phone = #{phone}
    </select>


</mapper>

